class Category:
    def __init__(self, id, name):
        self.__id = id
        self.__name = name
        self.__recipes = []

    @property
    def id(self):
        return self.__id

    @property
    def name(self):
        return self.__name

    @property
    def recipes(self):
        return self.__recipes

    def add_recipe(self, recipe):
        if recipe not in self.__recipes:
            self.__recipes.append(recipe)
            recipe.set_category(self)

    def __str__(self):
        return f"<Category {self.id}: {self.name}>"

    def print_with_recipes(self):
        print(self)
        print(f"Category {self.name} has the following associated recipes: [", end="")
        print(", ".join(str(r) for r in self.recipes), end="")
        print("]")


class Recipe:
    def __init__(self, id, name, author, description, ingredients,
                 instructions, cook_time, other_details, date_created):
        self.__id = id
        self.__name = name
        self.__author = author
        self.__description = description
        self.__ingredients = ingredients
        self.__instructions = instructions
        self.__cook_time = cook_time
        self.__other_details = other_details
        self.__date_created = date_created
        self.__categories = []

    @property
    def id(self):
        return self.__id

    @property
    def name(self):
        return self.__name

    @property
    def author(self):
        return self.__author

    @property
    def description(self):
        return self.__description

    @property
    def ingredients(self):
        return self.__ingredients

    @property
    def instructions(self):
        return self.__instructions

    @property
    def cook_time(self):
        return self.__cook_time

    @property
    def other_details(self):
        return self.__other_details

    @property
    def categories(self):
        return self.__categories

    @property
    def date_created(self):
        return self.__date_created

    def set_category(self, category):
        if category not in self.__categories:
            self.__categories.append(category)
            if self not in category.recipes:
                category.add_recipe(self)

    def __str__(self):
        return f"<Recipe {self.name} with id: {self.id} was created by {self.author} on {self.date_created}>"

#测试
print("1. Print some recipes")
r1 = Recipe(1, "Scrambled Eggs", "Jamie Oliver", "Delicious and quick eggs",
            ["eggs", "butter", "salt"], "Whisk eggs and cook in butter",
            5, "None", "2022-01-01")

r2 = Recipe(2, "Pancakes", "Gordon Ramsay", "Fluffy pancakes",
            ["flour", "milk", "egg", "baking powder"], "Mix and fry",
            10, "Serve with syrup", "2022-03-15")

print(r1)
print(r2)

print("\n2. Print some categories")
c1 = Category(100, "Breakfast")
c2 = Category(200, "Quick Meals")
print(c1)
print(c2)

print("\n3. Print a category with its associated recipes")
c1.add_recipe(r1)
c1.add_recipe(r2)
c1.print_with_recipes()
